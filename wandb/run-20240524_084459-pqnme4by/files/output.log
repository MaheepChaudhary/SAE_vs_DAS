
passed dict emned path /Users/maheepchaudhary/pytorch/Projects/concept_eraser_research/DAS_MAT/baulab.us/u/smarks/autoencoders/pythia-70m-deduped/embed
/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
You're using a GPTNeoXTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
  0%|                                                                                                                                        | 0/1000 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/Users/maheepchaudhary/pytorch/Projects/SAE_vs_DAS/main.py", line 246, in <module>
    train(DEVICE=args.device,
  File "/Users/maheepchaudhary/pytorch/Projects/SAE_vs_DAS/main.py", line 80, in train
    logits = new_model(text, temprature)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/maheepchaudhary/pytorch/Projects/SAE_vs_DAS/model.py", line 124, in forward
    with self.model.trace(text):
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/nnsight/contexts/Runner.py", line 41, in __exit__
    raise exc_val
  File "/Users/maheepchaudhary/pytorch/Projects/SAE_vs_DAS/model.py", line 147, in forward
    acts = l4_mask_sigmoid * acts
           ~~~~~~~~~~~~~~~~^~~~~~
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/nnsight/tracing/Proxy.py", line 184, in __rmul__
    return self.node.add(
           ^^^^^^^^^^^^^^
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/nnsight/tracing/Node.py", line 197, in add
    return self.graph.add(
           ^^^^^^^^^^^^^^^
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/nnsight/tracing/Graph.py", line 146, in add
    value = target(
            ^^^^^^^
  File "/Users/maheepchaudhary/miniforge3/envs/nnsight/lib/python3.12/site-packages/torch/_subclasses/fake_tensor.py", line 1780, in __torch_function__
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
TypeError: only integer tensors of a single element can be converted to an index
torch.Size([1, 1, 512])
Shape of l4_mask_sigmoid: torch.Size([1, 1, 512])
Shape of acts: (torch.Size([1, 31, 512]), (torch.Size([1, 8, 31, 64]), torch.Size([1, 8, 31, 64])))